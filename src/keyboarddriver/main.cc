/*****************************************************************
 * Source file : keyboarddriver.idl
 * Platform    : V4 IA32
 * Mapping     : CORBA C
 * 
 * Generated by IDL4 1.1.0 (roadrunner) on 16/07/2012 02:45
 * Report bugs to haeberlen@ira.uka.de
 *****************************************************************/

#include <sdi/sdi.h>
#include <sdi/constants.h>
#include "keyboarddriver-server.h"
#include <l4io.h>

#include <if/iflogging.h>

/* Interface keyboarddriver */

IDL4_INLINE CORBA_boolean  keyboarddriver_getKey_implementation(CORBA_Object  _caller, CORBA_long * key, CORBA_char * modifier, idl4_server_environment * _env)

{
  CORBA_boolean  __retval = 0;

  /* implementation of IF_KEYBOARDDRIVER::getKey */
  
  return __retval;
}

IDL4_PUBLISH_KEYBOARDDRIVER_GETKEY(keyboarddriver_getKey_implementation);

void * keyboarddriver_vtable_11[KEYBOARDDRIVER_DEFAULT_VTABLE_SIZE] = KEYBOARDDRIVER_DEFAULT_VTABLE_11;
void * keyboarddriver_vtable_discard[KEYBOARDDRIVER_DEFAULT_VTABLE_SIZE] = KEYBOARDDRIVER_DEFAULT_VTABLE_DISCARD;
void ** keyboarddriver_itable[16] = { keyboarddriver_vtable_discard, keyboarddriver_vtable_discard, keyboarddriver_vtable_discard, keyboarddriver_vtable_discard, keyboarddriver_vtable_discard, keyboarddriver_vtable_discard, keyboarddriver_vtable_discard, keyboarddriver_vtable_discard, keyboarddriver_vtable_discard, keyboarddriver_vtable_discard, keyboarddriver_vtable_11, keyboarddriver_vtable_discard, keyboarddriver_vtable_discard, keyboarddriver_vtable_discard, keyboarddriver_vtable_discard, keyboarddriver_vtable_discard };

void  keyboarddriver_server(void)

{
  L4_ThreadId_t  partner;
  L4_MsgTag_t  msgtag;
  idl4_msgbuf_t  msgbuf;
  long  cnt;

  idl4_msgbuf_init(&msgbuf);
  for (cnt = 0;cnt < KEYBOARDDRIVER_STRBUF_SIZE;cnt++)
    idl4_msgbuf_add_buffer(&msgbuf, malloc(8000), 8000);

  while (1)
    {
      partner = L4_nilthread;
      msgtag.raw = 0;
      cnt = 0;

      while (1)
        {
          idl4_msgbuf_sync(&msgbuf);

          idl4_reply_and_wait(&partner, &msgtag, &msgbuf, &cnt);

          if (idl4_is_error(&msgtag))
            break;

          idl4_process_request(&partner, &msgtag, &msgbuf, &cnt, keyboarddriver_itable[idl4_get_interface_id(&msgtag) & KEYBOARDDRIVER_IID_MASK][idl4_get_function_id(&msgtag) & KEYBOARDDRIVER_FID_MASK]);
        }
    }
}

void  keyboarddriver_discard(void)

{
}

int main(void)
{
        CORBA_Environment env(idl4_default_environment);

        L4_ThreadId_t loggerid = L4_nilthread;

	printf(" ");

        while (L4_IsNilThread(loggerid))
                loggerid = nameserver_lookup("/server/logger");

        IF_LOGGING_LogMessage((CORBA_Object)loggerid, "[KEYBOARDDRIVER] Registering", &env);

	driverserver_register("keyboard");

        IF_LOGGING_LogMessage((CORBA_Object)loggerid, "[KEYBOARDDRIVER] Registered...", &env);

	keyboarddriver_server();
}

